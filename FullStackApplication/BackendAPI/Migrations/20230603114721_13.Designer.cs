// <auto-generated />
using BackendAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendAPI.Migrations
{
    [DbContext(typeof(BackendAPIContext))]
    [Migration("20230603114721_13")]
    partial class _13
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BackendAPI.Models.Food", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodID"), 1L, 1);

                    b.Property<string>("FoodDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("FoodID");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            FoodID = 1,
                            FoodDescription = "Hic aut aut quis numquam dolor ut est cupiditate.",
                            FoodName = "Aspestos Flavoured sausages",
                            FoodType = "Cupcake",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 2,
                            FoodDescription = "Sapiente voluptatem omnis omnis commodi.",
                            FoodName = "Bacon Flavoured Icecream",
                            FoodType = "Snack",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 3,
                            FoodDescription = "Sint ea quia et culpa.",
                            FoodName = "Mac and Cheese Filled Doughnuts",
                            FoodType = "Muffin",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 4,
                            FoodDescription = "Sit dolor repudiandae quos neque et sunt quos.",
                            FoodName = "frostly Flakes Flavoured Milk",
                            FoodType = "Snack",
                            VendorID = 2
                        },
                        new
                        {
                            FoodID = 5,
                            FoodDescription = "Consectetur minus doloribus rerum minima totam modi et sunt.",
                            FoodName = "Plastic Cheese Burger",
                            FoodType = "Burger",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 6,
                            FoodDescription = "Voluptates animi quia illo quas quo ut.",
                            FoodName = "Apple pie arsenic surpise",
                            FoodType = "Cupcake",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 7,
                            FoodDescription = "Incidunt libero vel.",
                            FoodName = "A Warm Apple pie",
                            FoodType = "Cupcake",
                            VendorID = 2
                        },
                        new
                        {
                            FoodID = 8,
                            FoodDescription = "Natus aut qui et.",
                            FoodName = "Cardboard Pizza",
                            FoodType = "Beverage",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 9,
                            FoodDescription = "Est est eius commodi accusamus velit quibusdam.",
                            FoodName = "Chocolate Cake",
                            FoodType = "Breads",
                            VendorID = 2
                        },
                        new
                        {
                            FoodID = 10,
                            FoodDescription = "Quisquam pariatur quia.",
                            FoodName = "Live Plus Energy Drink",
                            FoodType = "Beverage",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 11,
                            FoodDescription = "Ea minus saepe quas nobis aut earum.",
                            FoodName = "Oliver's Favorite Food",
                            FoodType = "Breads",
                            VendorID = 1
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Furniture", b =>
                {
                    b.Property<int>("furnitureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("furnitureID"), 1L, 1);

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<string>("furnitureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("furnitureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("furnitureType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("furnitureID");

                    b.ToTable("Furniture");

                    b.HasData(
                        new
                        {
                            furnitureID = 1,
                            VendorID = 2,
                            furnitureDescription = "Est occaecati iusto blanditiis.",
                            furnitureName = "Thrustmaster 1000",
                            furnitureType = "Bed"
                        },
                        new
                        {
                            furnitureID = 2,
                            VendorID = 2,
                            furnitureDescription = "Rem magnam deleniti eum officiis sed.",
                            furnitureName = "The Pull Out",
                            furnitureType = "Couch"
                        },
                        new
                        {
                            furnitureID = 3,
                            VendorID = 2,
                            furnitureDescription = "Non consequatur eaque molestias asperiores animi in explicabo.",
                            furnitureName = "The waterbed",
                            furnitureType = "Couch"
                        },
                        new
                        {
                            furnitureID = 4,
                            VendorID = 1,
                            furnitureDescription = "Nihil possimus quas aut quae velit ut veniam sint.",
                            furnitureName = "regretabed",
                            furnitureType = "Couch"
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Vehicle", b =>
                {
                    b.Property<int>("vehicleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleID"), 1L, 1);

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<string>("vehicleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vehicleID");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            vehicleID = 1,
                            VendorID = 2,
                            vehicleDescription = "Illum facilis voluptatibus minus et. Architecto quaerat iure necessitatibus illo. Est ut est. Quidem qui est porro sed tenetur sed voluptas fugit sed.",
                            vehicleName = "Honda Del Sol",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 2,
                            VendorID = 1,
                            vehicleDescription = "Modi numquam et nobis ipsum voluptas. Nobis aspernatur facilis assumenda qui reiciendis. Omnis suscipit perspiciatis et iste. Animi impedit impedit repudiandae labore fugiat.",
                            vehicleName = "Honda Accord",
                            vehicleType = "Shitbox"
                        },
                        new
                        {
                            vehicleID = 3,
                            VendorID = 1,
                            vehicleDescription = "Velit voluptatem ea accusamus non et quasi animi qui. Ratione est rerum. Expedita omnis et et. Error doloremque quod ut velit facere ad.",
                            vehicleName = "Holden Crewman  S",
                            vehicleType = "StationWagon"
                        },
                        new
                        {
                            vehicleID = 4,
                            VendorID = 1,
                            vehicleDescription = "Rem esse nisi minima suscipit rerum quae eligendi ullam nam. Architecto reprehenderit quia laudantium et accusamus tempore eos. Occaecati non eos quod in. Nemo natus optio.",
                            vehicleName = "Holden Crewman SS",
                            vehicleType = "Sedan"
                        },
                        new
                        {
                            vehicleID = 5,
                            VendorID = 1,
                            vehicleDescription = "Et ratione unde quia veritatis. Et quidem nemo beatae aperiam neque. Et sint vero.",
                            vehicleName = "Nissan Tiida Latio",
                            vehicleType = "Sedan"
                        },
                        new
                        {
                            vehicleID = 6,
                            VendorID = 2,
                            vehicleDescription = "Nostrum voluptatem accusantium consequuntur dolorum ab rerum illo est cum. Eveniet doloribus perspiciatis velit sint repellendus non doloribus ipsam quo. Excepturi omnis sed cupiditate neque. Ad labore odit id.",
                            vehicleName = "Mazda Verisa",
                            vehicleType = "Shitbox"
                        },
                        new
                        {
                            vehicleID = 7,
                            VendorID = 1,
                            vehicleDescription = "Minima harum qui. Esse quo aperiam. Accusantium iure aliquid. Aperiam eos est et.",
                            vehicleName = "Ford Falcon FG XR6",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 8,
                            VendorID = 2,
                            vehicleDescription = "Molestiae et quia. Et ratione minus impedit qui. Assumenda sunt optio eum eius qui. Magnam ut recusandae amet animi quam officiis omnis tenetur esse.",
                            vehicleName = "Ford Falcon BA XR8",
                            vehicleType = "HatchBack"
                        },
                        new
                        {
                            vehicleID = 9,
                            VendorID = 2,
                            vehicleDescription = "Aperiam corrupti natus quam eos ut reiciendis quibusdam debitis reiciendis. Est excepturi nesciunt a illo officiis sit ipsa esse expedita. Dolor tempore veniam quas enim. Aut delectus fugit eum repellendus officiis cumque occaecati. Ut natus velit autem similique aut laborum. Unde error cupiditate dolore omnis nihil assumenda quod.",
                            vehicleName = "Nissan Cefiro",
                            vehicleType = "Shitbox"
                        },
                        new
                        {
                            vehicleID = 10,
                            VendorID = 1,
                            vehicleDescription = "Tempore beatae ex placeat ipsam quis vero. Velit quo nobis animi qui reprehenderit et. Tenetur minus harum ea dignissimos recusandae tempora cupiditate quo. Laborum ad eos quo aliquam voluptatem voluptatem omnis expedita. Quaerat non atque necessitatibus omnis dicta nesciunt sed vitae. Quae quasi ullam et.",
                            vehicleName = "Nissan Stagea",
                            vehicleType = "Sedan"
                        },
                        new
                        {
                            vehicleID = 11,
                            VendorID = 1,
                            vehicleDescription = "Voluptatibus quidem quasi voluptas provident. Maiores ut et est ullam inventore possimus molestiae. Minima adipisci iusto alias repudiandae et inventore cum quia nesciunt. Necessitatibus illo et harum maxime doloribus enim provident.",
                            vehicleName = "Subaru WRX",
                            vehicleType = "Ute"
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorID");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            VendorID = 2,
                            Description = "Tenetur nam voluptas nobis voluptates quas iste ut nulla.",
                            Location = "043 Osinski Mission",
                            Name = "Unlimited Problems Ltd."
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
