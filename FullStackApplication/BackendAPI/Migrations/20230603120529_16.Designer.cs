// <auto-generated />
using BackendAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendAPI.Migrations
{
    [DbContext(typeof(BackendAPIContext))]
    [Migration("20230603120529_16")]
    partial class _16
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BackendAPI.Models.Food", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodID"), 1L, 1);

                    b.Property<string>("FoodDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("FoodID");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            FoodID = 1,
                            FoodDescription = "Eum in amet quia.",
                            FoodName = "Bacon Flavoured Icecream",
                            FoodType = "Breads",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 2,
                            FoodDescription = "Vero numquam sit vitae et ab non ducimus quod corrupti.",
                            FoodName = "Oliver's Favorite Food",
                            FoodType = "Cupcake",
                            VendorID = 1
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Furniture", b =>
                {
                    b.Property<int>("furnitureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("furnitureID"), 1L, 1);

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<string>("furnitureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("furnitureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("furnitureType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("furnitureID");

                    b.ToTable("Furniture");

                    b.HasData(
                        new
                        {
                            furnitureID = 1,
                            VendorID = 2,
                            furnitureDescription = "Provident porro blanditiis porro praesentium voluptas aut.",
                            furnitureName = "Thrustmaster 1000",
                            furnitureType = "Bed"
                        },
                        new
                        {
                            furnitureID = 2,
                            VendorID = 2,
                            furnitureDescription = "Dolore libero ut impedit quia et.",
                            furnitureName = "The waterbed",
                            furnitureType = "Couch"
                        },
                        new
                        {
                            furnitureID = 3,
                            VendorID = 2,
                            furnitureDescription = "Ut est laborum.",
                            furnitureName = "regretabed",
                            furnitureType = "Occasional Furniture"
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Vehicle", b =>
                {
                    b.Property<int>("vehicleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleID"), 1L, 1);

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<string>("vehicleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vehicleID");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            vehicleID = 1,
                            VendorID = 1,
                            vehicleDescription = "Aliquid nihil sint exercitationem quia eveniet. Qui ut impedit facilis velit nam. Animi molestiae ratione. Voluptates rerum delectus cumque. Vel corrupti ad.",
                            vehicleName = "Honda Del Sol",
                            vehicleType = "HatchBack"
                        },
                        new
                        {
                            vehicleID = 2,
                            VendorID = 2,
                            vehicleDescription = "Laborum quibusdam voluptatibus vero qui. Ut molestiae et molestiae eos. Alias quibusdam dolores sunt mollitia ullam animi. Praesentium omnis nam iste minus. Explicabo velit nulla unde ea est sint voluptatem. Fugiat corporis nostrum laudantium.",
                            vehicleName = "Honda Accord",
                            vehicleType = "Shitbox"
                        },
                        new
                        {
                            vehicleID = 3,
                            VendorID = 1,
                            vehicleDescription = "Quia ea inventore ut dolores id. Est reiciendis quibusdam consequatur aut ullam ut exercitationem ratione fuga. Deserunt et provident qui ullam dolores fugiat.",
                            vehicleName = "Holden Crewman  S",
                            vehicleType = "Shitbox"
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorID");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            Description = "Mollitia quasi quia facere quos vel qui neque harum.",
                            Location = "6405 Welch Extensions",
                            Name = "Guaranteed Disappointment Corp."
                        },
                        new
                        {
                            VendorID = 2,
                            Description = "Sit dolores et delectus accusamus.",
                            Location = "479 Tromp Center",
                            Name = "Procrastination Solutions"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
