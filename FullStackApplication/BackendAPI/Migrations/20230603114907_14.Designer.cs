// <auto-generated />
using BackendAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendAPI.Migrations
{
    [DbContext(typeof(BackendAPIContext))]
    [Migration("20230603114907_14")]
    partial class _14
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BackendAPI.Models.Food", b =>
                {
                    b.Property<int>("FoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodID"), 1L, 1);

                    b.Property<string>("FoodDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("FoodID");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            FoodID = 1,
                            FoodDescription = "Impedit quia enim et.",
                            FoodName = "Aspestos Flavoured sausages",
                            FoodType = "Beverage",
                            VendorID = 2
                        },
                        new
                        {
                            FoodID = 2,
                            FoodDescription = "Voluptatibus recusandae dolorem omnis praesentium.",
                            FoodName = "Bacon Flavoured Icecream",
                            FoodType = "Muffin",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 3,
                            FoodDescription = "Non id in.",
                            FoodName = "Mac and Cheese Filled Doughnuts",
                            FoodType = "Cake",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 4,
                            FoodDescription = "Quibusdam fugiat eaque quasi ipsum alias quisquam impedit id.",
                            FoodName = "frostly Flakes Flavoured Milk",
                            FoodType = "Beverage",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 5,
                            FoodDescription = "Nam voluptatem in qui.",
                            FoodName = "Plastic Cheese Burger",
                            FoodType = "Cake",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 6,
                            FoodDescription = "Pariatur ut dolor quae necessitatibus.",
                            FoodName = "Apple pie arsenic surpise",
                            FoodType = "Breads",
                            VendorID = 2
                        },
                        new
                        {
                            FoodID = 7,
                            FoodDescription = "Est odit aut a.",
                            FoodName = "A Warm Apple pie",
                            FoodType = "Beverage",
                            VendorID = 2
                        },
                        new
                        {
                            FoodID = 8,
                            FoodDescription = "Recusandae aliquid debitis aliquam quaerat nam molestiae.",
                            FoodName = "Cardboard Pizza",
                            FoodType = "Burger",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 9,
                            FoodDescription = "Omnis et inventore nobis quam cum omnis id non ut.",
                            FoodName = "Chocolate Cake",
                            FoodType = "Snack",
                            VendorID = 2
                        },
                        new
                        {
                            FoodID = 10,
                            FoodDescription = "Quo eos est sit facere exercitationem.",
                            FoodName = "Live Plus Energy Drink",
                            FoodType = "Cupcake",
                            VendorID = 1
                        },
                        new
                        {
                            FoodID = 11,
                            FoodDescription = "Quis unde omnis.",
                            FoodName = "Oliver's Favorite Food",
                            FoodType = "Breads",
                            VendorID = 1
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Furniture", b =>
                {
                    b.Property<int>("furnitureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("furnitureID"), 1L, 1);

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<string>("furnitureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("furnitureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("furnitureType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("furnitureID");

                    b.ToTable("Furniture");

                    b.HasData(
                        new
                        {
                            furnitureID = 1,
                            VendorID = 1,
                            furnitureDescription = "Praesentium rerum illo ea minus dolores amet.",
                            furnitureName = "Thrustmaster 1000",
                            furnitureType = "Bed"
                        },
                        new
                        {
                            furnitureID = 2,
                            VendorID = 2,
                            furnitureDescription = "Quisquam aut vel eveniet consectetur corrupti.",
                            furnitureName = "The Pull Out",
                            furnitureType = "Occasional Furniture"
                        },
                        new
                        {
                            furnitureID = 3,
                            VendorID = 2,
                            furnitureDescription = "Voluptatum quas dolorum vel et sed.",
                            furnitureName = "The waterbed",
                            furnitureType = "Bed"
                        },
                        new
                        {
                            furnitureID = 4,
                            VendorID = 1,
                            furnitureDescription = "Ut dolorum unde maxime cum laudantium exercitationem.",
                            furnitureName = "regretabed",
                            furnitureType = "Couch"
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Vehicle", b =>
                {
                    b.Property<int>("vehicleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleID"), 1L, 1);

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.Property<string>("vehicleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vehicleID");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            vehicleID = 1,
                            VendorID = 1,
                            vehicleDescription = "Sed a suscipit ad similique quae molestiae nihil et voluptatem. Aut et aperiam. Vel ipsa commodi totam provident est et non fugiat magnam. Omnis occaecati omnis commodi ut atque vel enim vero minus. Quia rerum expedita id dolore. Illum suscipit non consequuntur vitae quia quam.",
                            vehicleName = "Honda Del Sol",
                            vehicleType = "StationWagon"
                        },
                        new
                        {
                            vehicleID = 2,
                            VendorID = 1,
                            vehicleDescription = "Deserunt quidem itaque est sint. Ratione incidunt quis. In praesentium sit minima vero at ut. Omnis tempora facilis nisi.",
                            vehicleName = "Honda Accord",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 3,
                            VendorID = 1,
                            vehicleDescription = "Amet iste sunt voluptas velit rem quisquam. Voluptates eligendi itaque ratione omnis asperiores vero voluptatum harum. Est harum ducimus distinctio suscipit dolor autem. Natus voluptatem doloremque doloremque et cumque maxime et. Error molestias delectus. Illum amet libero vel voluptas iure reiciendis.",
                            vehicleName = "Holden Crewman  S",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 4,
                            VendorID = 2,
                            vehicleDescription = "Dolorum corporis harum ipsa alias. Error minima in fuga fuga quis deleniti corrupti et. Voluptatum quasi nemo ea. Sapiente voluptatum pariatur quidem adipisci nihil ut quidem ut aut.",
                            vehicleName = "Holden Crewman SS",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 5,
                            VendorID = 2,
                            vehicleDescription = "Eum non dolores. Eius vel minus nemo eius voluptas laboriosam tenetur accusantium. Dolor eum soluta non consequatur.",
                            vehicleName = "Nissan Tiida Latio",
                            vehicleType = "Shitbox"
                        },
                        new
                        {
                            vehicleID = 6,
                            VendorID = 1,
                            vehicleDescription = "Odit quam qui nostrum corporis numquam. Aut voluptates doloremque ut quis sit eos. Vero itaque est quas impedit ut aliquam. Neque deserunt qui autem eaque. Nostrum nihil eum perferendis provident quas.",
                            vehicleName = "Mazda Verisa",
                            vehicleType = "Shitbox"
                        },
                        new
                        {
                            vehicleID = 7,
                            VendorID = 2,
                            vehicleDescription = "Facere aut sit sint aut aut voluptas cupiditate ipsam. Molestias dolor repellat iste non labore nostrum atque. Ratione ratione commodi similique impedit autem. Quia error dolorem optio voluptatem ducimus. Omnis et omnis sint neque voluptates. Sint est qui.",
                            vehicleName = "Ford Falcon FG XR6",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 8,
                            VendorID = 2,
                            vehicleDescription = "Necessitatibus quia totam aut tempora. Nostrum eum aut. Ut fugiat aperiam pariatur magnam qui debitis odit ut perferendis.",
                            vehicleName = "Ford Falcon BA XR8",
                            vehicleType = "StationWagon"
                        },
                        new
                        {
                            vehicleID = 9,
                            VendorID = 2,
                            vehicleDescription = "Tenetur animi eaque reiciendis labore iusto et id consequatur. Quam commodi tempora architecto saepe omnis voluptatem exercitationem est sint. Suscipit tenetur enim repellat aut explicabo.",
                            vehicleName = "Nissan Cefiro",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 10,
                            VendorID = 1,
                            vehicleDescription = "Sed similique assumenda dignissimos et et incidunt qui sint. Est maxime repellat nisi voluptas consequatur nam repellendus. Consequatur quis animi. Deserunt saepe sed rerum. Deserunt tempora cupiditate quae iste ea quia.",
                            vehicleName = "Nissan Stagea",
                            vehicleType = "Ute"
                        },
                        new
                        {
                            vehicleID = 11,
                            VendorID = 1,
                            vehicleDescription = "Sint praesentium aliquid dolorum suscipit quia. Ab omnis officia eum harum est distinctio. Nobis et tenetur quas est natus omnis saepe non. Ut iste qui. Eaque est sed officiis aut nihil ex ut. Voluptatem qui sunt sequi pariatur quas officia.",
                            vehicleName = "Subaru WRX",
                            vehicleType = "HatchBack"
                        });
                });

            modelBuilder.Entity("BackendAPI.Models.Vendor", b =>
                {
                    b.Property<int>("VendorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorID");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            VendorID = 1,
                            Description = "Tempora recusandae repellat sint autem fugiat consequuntur et ducimus ducimus.",
                            Location = "1079 Selmer Drive",
                            Name = "NovaGlobe Enterprises"
                        },
                        new
                        {
                            VendorID = 2,
                            Description = "Culpa et consequatur deleniti modi eveniet officia.",
                            Location = "68107 Schuppe Prairie",
                            Name = "ElixirPrime Group"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
